{
	// Place your Choosen workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// Paragraph
	"Template for Paragraph": {
		// "scope": "javascript,typescript",
		"prefix": "paragraph",
		"body": [
			"{",
			"  name: \"\",",
			"  content: ``,",
			"  choices: [",
			"    {",
			"     id: 1, ",
			"     content: ``, ",
			"     nextName: `` ",
			"    },",
			"  ],",
			"},"
		],
		"description": "Template for Paragraph"
	},
	// Choice
	"Template for Choice": {
		"prefix": "choice",
		"body": [
			"{",
			"  id: , ",
			"  content: ``, ",
			"  nextName: ``",
			"},"
		],
		"description": "Template for Choice"
	},
	//////////////////////////////CONSEQUENCE//////////////////////////////////////////
	//Consequence
	"Template for Consequence": {
		"prefix": "consequence",
		"body": [
			"consequence: {",
			"",
			"}"
		],
		"description": "Template for Consequence"
	},
	//stat for consequence
	"Template for Stat Consequence": {
		"prefix": "conStat",
		"body": [
			"stat: [",
			" { statName: ``, value: 10, style: },",
			"],"
		],
		"description": "Template for Stat Consequence"
	},
	//single stat for consequence
	"Template for consequence's Stat": {
		"prefix": "conStatEntry",
		"body": [
			"{ statName: ``, value: , style: statStyle.show },"
		],
		"description": "Template for Stat"
	},
	///////////////////////////////PRECONDITION/////////////////////////////////////
	//precondition
	"template for precondition": {
		"prefix": "precondition",
		"body": [
			"precondition: {",
			"  item: [],",
			"  stat: [],",
			"},",
			""
		],
		"description": "template for precondition"
	},

	//Array of items
	"Array of items": {
		"prefix": "items",
		"body": [
			"item: [",
			"          {",
			"            itemName: ``,",
			"            itemQty: ,",
			"            description: ``,",
			"            itemCode: ``,",
			"          },",
			"      ]"
		],
		"description": "template for an array of items"
	},
	//An item
	"A single item": {
		"prefix": "item",
		"body": [
			"{",
			"  itemName: ``,",
			"  itemQty: ,",
			"  description: ``,",
			"  itemCode: ``,",
			"},",
			""
		],
		"description": "A single item"
	},

	//Array of normal stats
	"Template for an array of Stats": {
		"prefix": "statsArray",
		"body": [
			"stat: [",
			" { statName: ``, value: 10 },",
			"],"
		],
		"description": "Template for array of Stats"
	},

	//regular stat object
	"Template for Stat": {
		"prefix": "stat",
		"body": [
			"{ statName: ``, value: , },"
		],
		"description": "Template for Stat"
	},


	//template for new quest
	"Template for Quests": {
		"prefix": "quest",
		"body": [
			"{",
			"    name: ``,",
			"    code: ``,",
			"    description:``,",
			"    stages: [",
			"        { id: ,",
			"         content: ``,",
			"        },",
			"    ]",
			"},"
		],
		"description": "Template for Quests"
	},
	//template for quest stage
	"Template for Quest's Stage": {
		"prefix": "stage",
		"body": [
			"{ id: ,",
			"   content: ``,",
			"},",
			""
		],
		"description": "Template for Quest's Stage"
	},


}